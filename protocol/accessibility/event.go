// Code generated by cdpgen. DO NOT EDIT.

package accessibility

import (
	"github.com/mafredri/cdp/rpcc"
)

// LoadCompleteClient is a client for LoadComplete events. The loadComplete
// event mirrors the load complete event sent by the browser to assistive
// technology when the web page has finished loading.
type LoadCompleteClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*LoadCompleteReply, error)
	rpcc.Stream
}

// LoadCompleteReply is the reply for LoadComplete events.
type LoadCompleteReply struct {
	Root AXNode `json:"root"` // New document root node.
}

// NodesUpdatedClient is a client for NodesUpdated events. The nodesUpdated
// event is sent every time a previously requested node has changed the in
// tree.
type NodesUpdatedClient interface {
	// Recv calls RecvMsg on rpcc.Stream, blocks until the event is
	// triggered, context canceled or connection closed.
	Recv() (*NodesUpdatedReply, error)
	rpcc.Stream
}

// NodesUpdatedReply is the reply for NodesUpdated events.
type NodesUpdatedReply struct {
	Nodes []AXNode `json:"nodes"` // Updated node data.
}
