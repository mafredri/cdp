// Code generated by cdpgen. DO NOT EDIT.

package emulation

// ScreenOrientation Screen orientation.
type ScreenOrientation struct {
	// Type Orientation type.
	//
	// Values: "portraitPrimary", "portraitSecondary", "landscapePrimary", "landscapeSecondary".
	Type  string `json:"type"`
	Angle int    `json:"angle"` // Orientation angle.
}

// VirtualTimePolicy advance: If the scheduler runs out of immediate work, the virtual time base may fast forward to allow the next delayed task (if any) to run; pause: The virtual time base may not advance; pauseIfNetworkFetchesPending: The virtual time base may not advance if there are any pending resource fetches.
//
// Note: This type is experimental.
type VirtualTimePolicy string

// VirtualTimePolicy as enums.
const (
	VirtualTimePolicyNotSet                       VirtualTimePolicy = ""
	VirtualTimePolicyAdvance                      VirtualTimePolicy = "advance"
	VirtualTimePolicyPause                        VirtualTimePolicy = "pause"
	VirtualTimePolicyPauseIfNetworkFetchesPending VirtualTimePolicy = "pauseIfNetworkFetchesPending"
)

func (e VirtualTimePolicy) Valid() bool {
	switch e {
	case "advance", "pause", "pauseIfNetworkFetchesPending":
		return true
	default:
		return false
	}
}

func (e VirtualTimePolicy) String() string {
	return string(e)
}
